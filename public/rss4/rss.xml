
<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:cc="http://cyber.law.harvard.edu/rss/creativeCommonsRssModule.html">
    <channel>
        <title><![CDATA[Stories by Dan Abramov on Medium]]></title>
        <description><![CDATA[Stories by Dan Abramov on Medium]]></description>
        <link>https://medium.com/@dan_abramov?source=rss-a3a8af6addc1------2</link>
        <image>
            <url>https://cdn-images-1.medium.com/fit/c/150/150/1*Vko_9kRNbjQGCqyBM9OnVw.jpeg</url>
            <title>Stories by Dan Abramov on Medium</title>
            <link>https://medium.com/@dan_abramov?source=rss-a3a8af6addc1------2</link>
        </image>
        <generator>Medium</generator>
        <lastBuildDate>Wed, 18 Oct 2017 21:13:35 GMT</lastBuildDate>
        <atom:link href="https://medium.com/feed/@dan_abramov" rel="self" type="application/rss+xml"/>
        <webMaster><![CDATA[yourfriends@medium.com]]></webMaster>
        <atom:link href="http://medium.superfeedr.com" rel="hub"/>
        <item>
            <title><![CDATA[Hey, thanks for feedback! ]]></title>
            <link>https://medium.com/@dan_abramov/hey-thanks-for-feedback-bf9502689ca4?source=rss-a3a8af6addc1------2</link>
            <guid isPermaLink="false">https://medium.com/p/bf9502689ca4</guid>
            <category><![CDATA[javascript]]></category>
            <category><![CDATA[react]]></category>
            <dc:creator><![CDATA[Dan Abramov]]></dc:creator>
            <pubDate>Mon, 24 Apr 2017 12:59:26 GMT</pubDate>
            <atom:updated>2017-04-24T20:24:38.929Z</atom:updated>
            <content:encoded><![CDATA[<p>Hey, thanks for feedback! üôÇ</p><p>I appreciate that you shared your frustrations, and keep them in mind.</p><p>Your post includes some misconceptions commonly held in the React community, so I wanted to take a moment to clarify them for everyone else who has the same concerns.</p><p>That is not to say that React works well for everyone, or that the issues you have raised are not valid. But there are a few facts that I think are important to get right when considering those problems.</p><blockquote>I started my app with React 15.5.0 knowing that my code is deprecate before even starting because facebook has just announced that for the next major release they are planning a complete rewrite of the framework and this means that they will likely nuke the current source because it can no longer be maintained.</blockquote><p>This claim is not correct, because the ‚Äúcomplete rewrite‚Äù is backwards compatible. We tried to stress this every time we talked about it, but it‚Äôs worth reiterating.</p><p>React 16 (work in progress) <em>is </em>a rewrite, but it has the same public API. Out of more than 30,000 (!) components at Facebook, only a dozen or so needed changes, and those few components were relying on unsupported or undocumented behavior.</p><p>So this is quite literally 99,9% compatibility. This makes us confident React 16 will most likely work with your code too.</p><p>Read more about our <a href="https://facebook.github.io/react/contributing/design-principles.html#stability">commitment to stability without stagnation</a>.</p><blockquote>Being not an expert about how to setup a whole project with the framework (and being also skeptical of letting doing my job to a cli tools like <a href="https://github.com/facebookincubator/create-react-app">create-react-app</a>)</blockquote><p><a href="https://github.com/facebookincubator/create-react-app">Create React App</a> is a thin layer on top of Webpack and Babel. It doesn‚Äôt generate the project code for you, but it configures those tools in the recommended way.</p><p>The complaint about boilerplates and starter kits in the next sentences doesn‚Äôt sound entirely fair to me, given that <em>there is</em> a solution to that problem, but you intentionally chose not to use it.</p><p>There is more work to do in this area, but I think the situation has improved in the past year, and I hope you give it a chance if you decide to try React again some time in the future.</p><blockquote>after a couple of hours of refactoring I understood that my code kept growing and it was already 3 times bigger than before due to all the amount of boilerplate code required by redux (ActionTypes, Actions, Reducers, connect‚Ä¶)</blockquote><p><a href="https://medium.com/@dan_abramov/you-might-not-need-redux-be46360cf367">Don‚Äôt use Redux if you don‚Äôt need it, as it is intentionally verbose.</a></p><p>React has a <a href="https://facebook.github.io/react/docs/state-and-lifecycle.html">built-in state system</a>, and I would recommend to start with it, and <a href="https://facebook.github.io/react/docs/lifting-state-up.html">lift the state up</a> when you need to share it between your components.</p><p>You can always add them later if you feel the need for them, but starting with MobX or Redux is often too much overhead for little gain.</p><blockquote>React-router is not officially maintained by facebook and the maintainers had the great idea of bumping 3 major versions in 5 months</blockquote><p>I‚Äôm not involved with React Router, but I think this claim is not true. If you‚Äôve been following React Router releases, you will know that:</p><ul><li>1.0 was released in 2015.</li><li>2.0 was released in February 2016 and is largely backwards compatible with 1.0 (but it added warnings about APIs that would change in 3.0).</li><li>3.0 was released in October 2016, and is basically the same as 2.0, but with those APIs finally changed.</li></ul><p>So if you only updated to stable versions (which you should unless you know what you‚Äôre doing), the transition from 1.0 to 2.0 should have been uneventful. You‚Äôd see a bunch of warnings, and you‚Äôd have 8 months to fix them before the next major (3.0) removed them.</p><p>Now, you‚Äôre completely right that 4.0 came right on the heels of 3.0. 4.0 is a complete rewrite, and has a slightly different philosophy (which happens to fix many of the issues reported to React Router over the years). You‚Äôre right 4.0 was released right after 3.0. The thing is‚Äîyou don‚Äôt have to migrate to it. There are many existing apps using 3.0, and the 3.x branch is still in active maintenance. So you won‚Äôt get burned by staying on 3.0 if you‚Äôre already using it, and the team is working on making the migration path to 4.x easier‚Äîfor those who are interested.</p><p>So the bottom line is: if you only used stable releases, React Router gave you a whole year to migrate to new APIs. They released a 4.x rewrite to fix some long-standing issues, but commit to maintaining the 3.x branch indefinitely. Doesn‚Äôt sound too bad to me!</p><blockquote>Once I understood what was the issue I was dragged into the rabbit hole being forced to add empty divs all over the place to let my app work properly</blockquote><blockquote>you can render functional components just by using js functions but you will need to wrap all your markup <em>always</em> in a<strong><em> </em></strong>wrapper tag<strong> </strong>to properly allow the Virtual DOM creation</blockquote><p>Glad you mentioned that! React 16 will support returning arrays from <em>render() </em>so you can delete all those nasty divs and wrapper tags. We‚Äôre working hard to make your life better.</p><blockquote>React seems to be an enhanced rendering framework born to replace the use of server side files (probably PHP) mixed to HTML as confirmed by this tweet</blockquote><p>It is not quite clear to me what exactly you mean by this. But if you‚Äôre interested in why React makes sense to us (and folks at Airbnb, Twitter, Pinterest, and other product companies), the way I usually explain it is that it helps us build apps with less bugs thanks to explicit data flow and lack of manual DOM management. It‚Äôs great if you found different strategies for dealing with these problems, as we all learn from each other.</p><p><a href="https://css-tricks.com/project-need-react/">This article</a> digs into why some people find React useful so I encourage you to take a look at it! But it‚Äôs totally cool if React doesn‚Äôt solve that problem for you, or you prefer a different set of tradeoffs provided by great alternatives like Vue, Ember, and Angular.</p><blockquote>its apparent simplicity is hidden behind a whole toolchain you need to configure before you can even writing 1 line of code</blockquote><p>This is not correct, as you can use React <a href="https://facebook.github.io/react/docs/react-without-es6.html">without ES6</a> and <a href="https://facebook.github.io/react/docs/react-without-jsx.html">without JSX</a> if you prefer so. Then it‚Äôs as simple as dropping a single script tag in your app.</p><p>But we do think build toolchains are useful (even you think so‚Äîgiven that you mentioned you‚Äôre using a linter). While they are not always easy to configure, we hope that solutions like Create React App will make them more accessible, and the underlying projects (e.g. Webpack) will get more user-friendly over time (Webpack 2 is making a lot of progress in this area with config validation). So I‚Äôm optimistic about them, but I see why people might want to use React without them.</p><blockquote>you will need to import in your scriptsreact-dom and react without never using the last one instance for some wild reason known only by the React team</blockquote><p>The reason JSX transform requires <em>React</em> to be in scope so that JSX works with browser globals. Which is related to your previous complaint: we want JSX to work even if you don‚Äôt use a bundler!</p><blockquote>you must use className instead of class to define the DOM css classes</blockquote><p>You are completely right it‚Äôs annoying. It‚Äôs one of those early design decisions to align better with the DOM APIs that has proved to be confusing. We might change this in the future.</p><blockquote>what do you expect from a framework with more than 1000 issues on github</blockquote><p>React Native has a lot of API surface area, and is very popular, so naturally it gets a lot of issues. Many of those are support requests, but we appreciate all the help fixing bugs and helping people in the issues.</p><blockquote>that will let you install alpha dependencies by default (React@16.0.0-alpha.6) to develop your native app?!?</blockquote><p>The version of the <em>react</em> package is generally not relevant for React Native users because it contains very little code (<em>Component</em> and <em>createElement</em>). The reconciler code is synced to React Native separately. So this an artifact of the different release cycles of RN and React, and doesn‚Äôt at all mean that RN apps are using an unstable version of React. This is the same exact version we are using at Facebook in production. I agree it‚Äôs confusing though, and we hope to align the release process between React and React Native more closely in the future.</p><p>To sum up, I‚Äôm grateful that you brought up these concerns in an article. They come up pretty often, and I thought it is important to separate the facts from misconceptions. But there is definitely more work ahead both for us and for the ecosystem to deliver a better experience to React users, and I‚Äôm glad you articulated those common issues so we can better address them.</p><p><strong>Edit: </strong>I would like to thank everybody who pointed out the first version of this article was too passive aggressive. I‚Äôm very sorry about this! I edited the article to a more professional tone, as I should have done before posting. I also removed all emojis but you can still find them on <a href="https://twitter.com/dan_abramov">my Twitter</a>. üôÉ</p><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=bf9502689ca4" width="1" height="1">]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[This is a fine approach at first but it is crucial that the person using this technique understands‚Ä¶]]></title>
            <link>https://medium.com/@dan_abramov/it-is-crucial-that-the-person-using-this-technique-understands-when-its-time-to-introduce-real-b74a0db75ef7?source=rss-a3a8af6addc1------2</link>
            <guid isPermaLink="false">https://medium.com/p/b74a0db75ef7</guid>
            <dc:creator><![CDATA[Dan Abramov]]></dc:creator>
            <pubDate>Fri, 09 Dec 2016 10:47:55 GMT</pubDate>
            <atom:updated>2016-12-09T10:49:13.042Z</atom:updated>
            <content:encoded><![CDATA[<p>This is a fine approach at first but it is crucial that the person using this technique understands <strong>when</strong> it‚Äôs a good time to introduce real actions and reducer composition. <strong>It does not mean adding action creators</strong> but it means separating ‚Äúwhat happened‚Äù (e.g. SAVE_DRAFT) from ‚Äúwhat updated in response‚Äù (e.g. state.title).</p><p>Most often people associated boilerplate with action creators. That‚Äôs the part I recommend omitting until you need it. It‚Äôs surprising how often people don‚Äôt realize action creators are <strong>not</strong> an inherent part of Redux.</p><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=b74a0db75ef7" width="1" height="1">]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[FWIW Create React App includes a fetch() polyfill by default.]]></title>
            <link>https://medium.com/@dan_abramov/fwiw-create-react-app-includes-a-fetch-polyfill-by-default-c9f63c7183d?source=rss-a3a8af6addc1------2</link>
            <guid isPermaLink="false">https://medium.com/p/c9f63c7183d</guid>
            <dc:creator><![CDATA[Dan Abramov]]></dc:creator>
            <pubDate>Fri, 07 Oct 2016 11:30:58 GMT</pubDate>
            <atom:updated>2016-10-07T11:30:58.457Z</atom:updated>
            <content:encoded><![CDATA[<p>FWIW Create React App includes a fetch() polyfill by default.</p><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=c9f63c7183d" width="1" height="1">]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Then you can move this reducer into the closest common ancestor component, and pass dispatch down‚Ä¶]]></title>
            <link>https://medium.com/@dan_abramov/then-you-can-move-this-reducer-into-the-closest-common-ancestor-component-and-pass-dispatch-down-1ebb975477bb?source=rss-a3a8af6addc1------2</link>
            <guid isPermaLink="false">https://medium.com/p/1ebb975477bb</guid>
            <dc:creator><![CDATA[Dan Abramov]]></dc:creator>
            <pubDate>Wed, 21 Sep 2016 15:00:34 GMT</pubDate>
            <atom:updated>2016-09-21T15:00:34.256Z</atom:updated>
            <content:encoded><![CDATA[<p>Then you can move this reducer into the closest common ancestor component, and pass dispatch down as a prop to child components. It‚Äôs exactly the same state hoisting pattern that React uses, except moving reducers up or below is less work than changing a bunch of methods with setState() calls. Again, not saying you should necessarily do that, but you can.</p><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=1ebb975477bb" width="1" height="1">]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[I‚Äôm not sure what you mean because React Router has absolutely no relation to Redux.]]></title>
            <link>https://medium.com/@dan_abramov/im-not-sure-what-you-mean-because-react-router-has-absolutely-no-relation-to-redux-7256ba77865b?source=rss-a3a8af6addc1------2</link>
            <guid isPermaLink="false">https://medium.com/p/7256ba77865b</guid>
            <dc:creator><![CDATA[Dan Abramov]]></dc:creator>
            <pubDate>Wed, 21 Sep 2016 14:57:32 GMT</pubDate>
            <atom:updated>2016-09-21T14:57:32.101Z</atom:updated>
            <content:encoded><![CDATA[<p>I‚Äôm not sure what you mean because React Router has absolutely no relation to Redux. Please refer to React Router documentation to learn how to use it with React.</p><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=7256ba77865b" width="1" height="1">]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Less indirection and ‚Äúboilerplate‚Äù.]]></title>
            <link>https://medium.com/@dan_abramov/less-indirection-and-boilerplate-b2fdb030bf2?source=rss-a3a8af6addc1------2</link>
            <guid isPermaLink="false">https://medium.com/p/b2fdb030bf2</guid>
            <dc:creator><![CDATA[Dan Abramov]]></dc:creator>
            <pubDate>Mon, 19 Sep 2016 23:19:22 GMT</pubDate>
            <atom:updated>2016-09-19T23:19:22.054Z</atom:updated>
            <content:encoded><![CDATA[<p>Less indirection and ‚Äúboilerplate‚Äù.</p><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=b2fdb030bf2" width="1" height="1">]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[You Might Not Need Redux]]></title>
            <link>https://medium.com/@dan_abramov/you-might-not-need-redux-be46360cf367?source=rss-a3a8af6addc1------2</link>
            <guid isPermaLink="false">https://medium.com/p/be46360cf367</guid>
            <category><![CDATA[redux]]></category>
            <category><![CDATA[javascript]]></category>
            <category><![CDATA[react]]></category>
            <dc:creator><![CDATA[Dan Abramov]]></dc:creator>
            <pubDate>Mon, 19 Sep 2016 21:30:45 GMT</pubDate>
            <atom:updated>2016-09-19T21:30:45.266Z</atom:updated>
            <content:encoded><![CDATA[<p>People often choose Redux before they need it. ‚ÄúWhat if our app doesn‚Äôt scale without it?‚Äù Later, developers frown at the indirection Redux introduced to their code. ‚ÄúWhy do I have to touch three files to get a simple feature working?‚Äù Why indeed!</p><p>People blame Redux, React, functional programming, immutability, and many other things for their woes, and I understand them. It is natural to compare Redux to an approach that doesn‚Äôt require ‚Äúboilerplate‚Äù code to update the state, and to conclude that Redux is just complicated. In a way it is, and by design so.</p><p>Redux offers a tradeoff. It asks you to:</p><ul><li>Describe application state as plain objects and arrays.</li><li>Describe changes in the system as plain objects.</li><li>Describe the logic for handling changes as pure functions.</li></ul><p>None of these limitations are required to build an app, with or without React. In fact these are pretty strong constraints, and you should think carefully before adopting them even in parts of your app.</p><p>Do you have good reasons for doing so?</p><p>These limitations are appealing to me because they help build apps that:</p><ul><li><a href="https://egghead.io/lessons/javascript-redux-persisting-the-state-to-the-local-storage?course=building-react-applications-with-idiomatic-redux">Persist state to a local storage and then boot up from it, out of the box.</a></li><li><a href="http://redux.js.org/docs/recipes/ServerRendering.html">Pre-fill state on the server, send it to the client in HTML, and boot up from it, out of the box.</a></li><li><a href="https://github.com/dtschust/redux-bug-reporter">Serialize user actions and attach them, together with a state snapshot, to automated bug reports, so that the product developers can replay them to reproduce the errors.</a></li><li><a href="https://github.com/philholden/redux-swarmlog">Pass action objects over the network to implement collaborative environments without dramatic changes to how the code is written.</a></li><li><a href="http://redux.js.org/docs/recipes/ImplementingUndoHistory.html">Maintain an undo history or implement optimistic mutations without dramatic changes to how the code is written.</a></li><li><a href="https://github.com/gaearon/redux-devtools">Travel between the state history in development, and re-evaluate the current state from the action history when the code changes, a la TDD.</a></li><li><a href="https://github.com/romseguy/redux-devtools-chart-monitor">Provide full inspection and control capabilities to the development tooling so that product developers can build custom tools for their apps.</a></li><li><a href="https://youtu.be/gvVpSezT5_M?t=11m51s">Provide alternative UIs while reusing most of the business logic.</a></li></ul><p>If you‚Äôre working on <a href="https://hyperterm.org/">an extensible terminal</a>, <a href="https://hacks.mozilla.org/2016/09/introducing-debugger-html/">a JavaScript debugger</a>, or <a href="https://twitter.com/necolas/status/727538799966715904">some kinds of webapps</a>, it might be worth giving it a try, or at least considering some of its ideas (they are <a href="https://github.com/evancz/elm-architecture-tutorial">not</a> <a href="https://github.com/omcljs/om">new</a>, by the way!)</p><p>However, if you‚Äôre just learning React, don‚Äôt make Redux your first choice.</p><p>Instead learn to <a href="https://facebook.github.io/react/docs/thinking-in-react.html">think in React</a>. Come back to Redux if you find a real need for it, or if you want to try something new. But approach it with caution, just like you do with any highly opinionated tool.</p><p>If you feel pressured to do things ‚Äúthe Redux way‚Äù, it may be a sign that you or your teammates are taking it too seriously. It‚Äôs just one of the tools in your toolbox, <a href="https://www.youtube.com/watch?v=xsSnOQynTHs">an experiment</a> <a href="https://www.youtube.com/watch?v=uvAXVMwHJXU">gone wild</a>.</p><p>Finally, don‚Äôt forget that you can apply ideas from Redux without using Redux. For example, consider a React component with local state:</p><iframe src="" width="0" height="0" frameborder="0" scrolling="no"><a href="https://medium.com/media/7ab96fca83d8d0afe750a5e1b36744d7/href">https://medium.com/media/7ab96fca83d8d0afe750a5e1b36744d7/href</a></iframe><p>It is <em>perfectly fine </em>as it is. Seriously, it bears repeating.</p><p><em>Local state is fine.</em></p><p>The tradeoff that Redux offers is to <em>add indirection </em>to decouple ‚Äúwhat happened‚Äù from ‚Äúhow things change‚Äù.</p><p>Is it always a good thing to do? No. It‚Äôs a tradeoff.</p><p>For example, we can extract a reducer from our component:</p><iframe src="" width="0" height="0" frameborder="0" scrolling="no"><a href="https://medium.com/media/cda37d0dffa92367bb2d5d60513d1658/href">https://medium.com/media/cda37d0dffa92367bb2d5d60513d1658/href</a></iframe><p>Notice how we just used Redux without running <em>npm install.</em> Wow!</p><p>Should you do this to your stateful components? Probably not. That is, <em>not unless you have a plan</em> to benefit from this additional indirection. Having a plan is, in the parlance of our times, the üîë.</p><p><a href="http://redux.js.org/">Redux library</a> itself is only a set of helpers to ‚Äúmount‚Äù reducers to a single global store object. You can use as little, or as much of Redux, as you like.</p><p>But if you trade something off, make sure you get something in return.</p><p>‚öõ</p><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=be46360cf367" width="1" height="1">]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[I love Programming in the 21st Century.]]></title>
            <link>https://medium.com/@dan_abramov/i-love-programming-in-the-21st-century-d17877b25e5?source=rss-a3a8af6addc1------2</link>
            <guid isPermaLink="false">https://medium.com/p/d17877b25e5</guid>
            <dc:creator><![CDATA[Dan Abramov]]></dc:creator>
            <pubDate>Wed, 14 Sep 2016 21:34:17 GMT</pubDate>
            <atom:updated>2016-09-14T21:34:17.838Z</atom:updated>
            <content:encoded><![CDATA[<p>I love <a href="http://prog21.dadgum.com/archives.html">Programming in the 21st Century</a>.</p><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=d17877b25e5" width="1" height="1">]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Well, to be perfectly clear, you can, just outside of Create React App setup:]]></title>
            <link>https://medium.com/@dan_abramov/well-to-be-perfectly-clear-you-can-just-outside-of-create-react-app-setup-6e44f91cc086?source=rss-a3a8af6addc1------2</link>
            <guid isPermaLink="false">https://medium.com/p/6e44f91cc086</guid>
            <dc:creator><![CDATA[Dan Abramov]]></dc:creator>
            <pubDate>Wed, 03 Aug 2016 23:58:49 GMT</pubDate>
            <atom:updated>2016-08-03T23:59:34.191Z</atom:updated>
            <content:encoded><![CDATA[<p>Well, to be perfectly clear, you can, just outside of Create React App setup:</p><blockquote>node-sass ./src/app.scss -w -o ./src/css</blockquote><p>And import the resulting CSS.</p><p>(Thanks for the <a href="https://twitter.com/soska/status/760964598451372032">tip</a> to <a href="https://medium.com/u/2de7864667e">Armando Sosa</a>)</p><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=6e44f91cc086" width="1" height="1">]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Send a PR to improve it ;-)]]></title>
            <link>https://medium.com/@dan_abramov/send-a-pr-to-improve-it-ddcc6922b71d?source=rss-a3a8af6addc1------2</link>
            <guid isPermaLink="false">https://medium.com/p/ddcc6922b71d</guid>
            <dc:creator><![CDATA[Dan Abramov]]></dc:creator>
            <pubDate>Wed, 03 Aug 2016 23:55:07 GMT</pubDate>
            <atom:updated>2016-08-03T23:55:07.116Z</atom:updated>
            <content:encoded><![CDATA[<p>Send a PR to improve it ;-)</p><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=ddcc6922b71d" width="1" height="1">]]></content:encoded>
        </item>
    </channel>
</rss>
